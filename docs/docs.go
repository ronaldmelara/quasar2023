// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ronald Melara",
            "email": "ronald.melara@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/p/topsecret_split/{satellite_name}": {
            "post": {
                "description": "Enviando el nombre de un satélite, mas la distancia se puede obtener la posición donde se encuentra en el plano y saber si la distancia ingresada se encuentra en el radio de alcance del satélite.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TopSecretSplit"
                ],
                "summary": "Obtener la información de un satélite en particular y su mensaje",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre del Satélite",
                        "name": "satellite_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Distancia de la nave enemiga",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TopSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseTopSecret"
                        }
                    }
                }
            }
        },
        "/topsecret/": {
            "post": {
                "description": "Este servicio permite calcular la trilateración de la nave enemiga en base a las 3 posiciones de los satélites, la distancia del objecto (nave enemiga) a cada satélite. Adicional, realiza un merge de cada fragmento de los mensajes recepcionado en cada satélite para entregarlo en un unico mensaje.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TopSecret"
                ],
                "summary": "Cálculo de Trilateración y Decifrar mensaje",
                "parameters": [
                    {
                        "description": "Se debe enviar por el body la siguiente estructura JSON",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TopSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseTopSecret"
                        }
                    }
                }
            }
        },
        "/topsecret_split/{satellite_name}": {
            "get": {
                "description": "Enviando el nombre de un satélite se puede obtener la posición donde se encuentra en el plano.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TopSecretSplit"
                ],
                "summary": "Obtener la información de un satélite en particular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre del Satélite",
                        "name": "satellite_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseTopSecret"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Entry": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.Position": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "dto.ResponseTopSecret": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/dto.Position"
                }
            }
        },
        "dto.TopSecret": {
            "type": "object",
            "properties": {
                "satellites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Entry"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "quasar2023-jnswrwco3q-uc.a.run.app",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Operación Fuego de Quasar - MELI",
	Description:      "Esta API corresponde al desarrollo planteado para el desafío técnico de Mercado Libre. La API REST ha sido desarrollada en GO. Es posible ver visualizar el código alojado en el github https://github.com/ronaldmelara/quasar2023",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
